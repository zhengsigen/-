package com.c1801.spring.dzy.controller.collection;

import com.c1801.spring.dzy.common.ResData;
import com.c1801.spring.dzy.mapper.BookCollectionMapper;
import com.c1801.spring.dzy.model.BookCollection;
import com.c1801.spring.dzy.model.BookCollectionList;
import com.c1801.spring.dzy.model.RecommendBook;
import com.c1801.spring.dzy.model.User;
import com.c1801.spring.dzy.service.BookCategoryService;
import com.c1801.spring.dzy.service.CollectionService;
import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpSession;
import java.util.List;

/**
 * 书单
 */
@RestController
@RequestMapping("/dzy/category")
public class CollectionController {

    @Autowired
    private BookCollectionMapper  bookCollectionMapper;

    @Autowired
    private CollectionService collectionService;

    /**
     * 查询首页书单列表数据
     *
     * @return
     */
    @GetMapping
    public ResData getBookCollection() {
        ResData resData = new ResData();
        List<BookCollection> bookCollection = bookCollectionMapper.getBookCollection();
        return resData.ofSuccess(0, "查询成功", bookCollection);
    }
    /**
     * @return
     * @郑思根 新增指定书籍到指定书单
     */
    @PostMapping("/recommend")
    public ResData addBookAppointCollection(@RequestBody RecommendBook recommendBook, HttpSession session) {
        //如果书单id为空
        if (recommendBook.getCollectionId() == null ||
                //如果书籍id或者isbn都为空
                (recommendBook.getBookId() == null && recommendBook.getIsbn() == null)) {
            return ResData.ofSuccess(1001, "参数缺失");
    }
        User user = (User) session.getAttribute("user");
        recommendBook.setUserId(user.getId());
        return collectionService.addBookAppointCollection(recommendBook);
    }

    /**
     * 书单详情
     * @param id
     * @return
     */
    @GetMapping("/id")
    public ResData getBookCollectionByID(@Param("id")Integer id){
        ResData resData=new ResData();
        return resData.ofSuccess(0,"查询成功",collectionService.getBookCollectionByID(id));
    }

    /**
     * 查询书单下的书籍
     * @param id
     * @return
     */
    @GetMapping("/book/id")
    public ResData getBookCollectionBookByID(@Param("id")Integer id,@Param("page")Integer page){
        Integer size = 5;
        ResData resData=new ResData();
        List<BookCollectionList> bookCollectionBookByID = collectionService.getBookCollectionBookByID(id, (page - 1) * size, size);
        return resData.ofSuccess(0,"查询成功",bookCollectionBookByID);
    }

    /***
     * @郑思根
     * 根据推荐id获取到 书单详情(书单推荐用户数量，书单推荐书籍数量)，书籍详情，用户详情，推荐详情
     * @return
     */
    @GetMapping("/recommend")
    public ResData queryRecommendAccountById(@RequestParam("id") Integer id){
        if(id==null){
            return ResData.ofSuccess(1001, "参数缺失");
        }
        return collectionService.queryRecommendAccountById(id);
    }

}
