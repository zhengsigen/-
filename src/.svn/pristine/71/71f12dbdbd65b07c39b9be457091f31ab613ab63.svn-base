<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.c1801.spring.dzy.mapper.CartMapper">

<!--    添加到购物车-->
<!--    当前用户购物车中没有这本书-->
    <insert id="addShopToCart" flushCache="true">
        insert carts_tb(user_id, book_id,`condition`)
        select #{userId}, #{bookId}, #{condition} from carts_tb
        where not exists (select id from carts_tb where user_id = #{userId} and book_id = #{bookId} and in_order = 0)
        limit 1
    </insert>

<!--    根据购物车id和用户id删除购物车-->
    <delete id="delShopFromCart" flushCache="true">
        delete from carts_tb where cart_id = #{cartId} and user_id = #{userId} and in_order = 0
    </delete>

<!--    改购物车商品品相-->
    <update id="updateConditoinOfCart" flushCache="true">
        update carts_tb set `condition` = #{cart.condition} where id = #{cart.id} and user_id = #{cart.userId}
    </update>

<!--    修改是否选中-->
    <update id="updateSelectedCart" flushCache="true">
        update carts_tb set has_selected = !has_selected where cart_id = #{cartId} user_id = #{userId} and in_order = 0
    </update>

<!--    批量修改是否选中-->
    <update id="updateSelectedCarts" flushCache="true">
        update carts_tb set has_selected = #{selected}
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        and has_selected != selected and user_id = #{userId}
    </update>

<!--    查询用户购物车有库存的商品-->
    <select id="queryHasStockCarts" useCache="true">
        select c.id id, c.user_id userId, c.book_id bookId, c.`condition` `condition`, c.has_selected hasSelected, c.in_order inOrder,bs.discount discount,if(bs.stock>0,1,0) hasStock,bs.`status` `status`, b.name name, b.cover cover, b.isbn13 isbn13, b.isbn10 isbn10, b.author author, b.price price, b.publisher publisher
        from carts_tb c left join book_sku_tb bs on c.book_id = bs.book_id and c.`condition` = bs.`condition` left join books_tb b on bs.book_id = b.id
        where user_id = 16 and bs.`status` =1 and bs.stock > 0

    </select>

<!--    查询用户购物车缺货商品-->
    <select id="queryStockoutCarts" useCache="true">
         select c.id id, c.user_id userId, c.book_id bookId, c.`condition` `condition`, c.has_selected hasSelected, c.in_order inOrder,bs.discount discount,if(bs.stock>0,1,0) hasStock,bs.`status` `status`, b.name name, b.cover cover, b.isbn13 isbn13, b.isbn10 isbn10, b.author author, b.price price, b.publisher publisher
        from carts_tb c left join book_sku_tb bs on c.book_id = bs.book_id and c.`condition` = bs.`condition` left join books_tb b on bs.book_id = b.id
        where user_id = 16 and bs.`status` =1 and bs.stock = 0

    </select>

<!--    查询用户购物车商品数量-->
    <select id="queryUserCartCount" resultType="int" >
        select count(id) from carts_tb where user_id = #{userId}
    </select>


</mapper>